{"version":3,"sources":["actions/types.js","reducers/postReducer.js","reducers/index.js","store.js","components/Posts.jsx","actions/postAction.js","components/PostForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["FETCH_POST","NEW_POST","initialState","items","combineReducers","posts","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","connect","fetchPosts","dispatch","a","axios","get","res","data","props","useEffect","postItems","map","post","title","body","id","createPost","console","log","useState","setTitle","setBody","onSubmit","e","preventDefault","className","htmlFor","name","value","onChange","target","cols","rows","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPACaA,EAAa,aACbC,EAAW,WCClBC,EAAe,CACjBC,MAAO,ICAIC,kBAAgB,CAC3BC,MDEW,WAAqD,IAA5BC,EAA2B,uDAArBJ,EAAcK,EAAO,uCAC/D,OAAOA,EAAOC,MACV,KAAKR,EACD,OAAO,2BACAM,GADP,IAEIH,MAAOI,EAAOE,UAEtB,KAAKR,EACD,OAAO,2BACAK,GADP,IAEIH,MAAM,CAAEI,EAAOE,SAAV,mBAAsBH,EAAMH,UAEzC,QACI,OAAOG,MEbbI,EAAa,CAACC,KAOLC,EAHDC,YAAYC,EALN,GAKgCC,YAAQC,IAAe,WAAf,EAAmBN,K,wDCmB/E,IAMeO,eANS,SAACX,GACvB,MAAO,CACLD,MAAOC,EAAMD,MAAMF,SAIiB,CAAEe,WC/BhB,yDAAM,WAAMC,GAAN,eAAAC,EAAA,sEACVC,IAAMC,IAAI,uDADA,OACtBC,EADsB,OAE5BJ,EAAS,CAAEX,KAAMR,EAAYS,QAASc,EAAIC,OAFd,2CAAN,wDD+BXP,EA5Bf,SAAeQ,GAAQ,IACbP,EAAsBO,EAAtBP,WAAYb,EAAUoB,EAAVpB,MACpBqB,qBAAU,WACRR,MACE,CAACA,IAEL,IAAMS,EAAYtB,EAAMuB,KAAI,SAACC,GACvB,OACE,gCACE,6BAAKA,EAAKC,QACV,4BAAID,EAAKE,SAFDF,EAAKG,OAMvB,OACE,gCACE,sCACCL,Q,QEqCQV,kBAAQ,KAAM,CAAEgB,WDpDL,SAACJ,GAAD,8CAAU,WAAMV,GAAN,eAAAC,EAAA,6DAChCc,QAAQC,IAAI,iBADoB,SAEdd,IAAMQ,KAAK,6CAA8CA,GAF3C,OAE1BN,EAF0B,OAGhCJ,EAAS,CAACX,KAAMP,EAAUQ,QAASc,EAAIC,OAHP,2CAAV,wDCoDXP,EAzDf,SAAkBQ,GAAQ,IAEdQ,EAAeR,EAAfQ,WAFa,EAIKG,mBAAS,IAJd,mBAIdN,EAJc,KAIPO,EAJO,OAKGD,mBAAS,IALZ,mBAKdL,EALc,KAKRO,EALQ,KAcrB,OACI,gCACI,0CACA,uBAAMC,SAVd,SAAsBC,GAClBA,EAAEC,iBACHR,EAAW,CAACH,QAAOC,SACnBM,EAAS,IACTC,EAAQ,KAMH,UACI,sBAAKI,UAAU,aAAf,UACI,uBAAOC,QAAQ,QAAf,mBACA,uBACIX,GAAG,QACHxB,KAAK,OACLoC,KAAK,QACLF,UAAU,eACVG,MAAOf,EACPgB,SAAU,SAAAN,GAAC,OAAIH,EAASG,EAAEO,OAAOF,aAIzC,sBAAKH,UAAU,aAAf,UACI,uBAAOC,QAAQ,OAAf,kBACA,0BACIC,KAAK,OACLZ,GAAG,OACHgB,KAAK,MACLC,KAAK,KACLP,UAAU,eACVG,MAAOd,EACPe,SAAU,SAAAN,GAAC,OAAIF,EAAQE,EAAEO,OAAOF,aAIxC,uBACIrC,KAAK,SACLqC,MAAM,SACNH,UAAU,sCC5BfQ,MAZf,WACE,OACE,cAAC,IAAD,CAAUtC,MAAOA,EAAjB,SACE,sBAAK8B,UAAU,YAAf,UACE,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,UCLOS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bfcb9a6c.chunk.js","sourcesContent":["\nexport const FETCH_POST = 'FETCH_POST';\nexport const NEW_POST = 'NEW_POST';\n\n","\nimport { FETCH_POST, NEW_POST } from '../actions/types';\n\nconst initialState = {\n    items: [],\n}\n\nexport default function postsController(state=initialState, action){\n    switch(action.type){\n        case FETCH_POST:\n            return {\n                ...state,\n                items: action.payload\n            }\n        case NEW_POST:\n            return {\n                ...state,\n                items: [action.payload, ...state.items],\n            }\n        default:\n            return state;            \n    }\n} ","\nimport { combineReducers } from 'redux';\nimport postReducer from './postReducer';\n\nexport default combineReducers({\n    posts: postReducer\n});","\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\n\nconst intialState = {};\nconst middleware = [thunk];\n\n\n\nconst store = createStore(rootReducer, intialState, compose(applyMiddleware(...middleware) /*, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()*/));\n\n\nexport default store;","\nimport React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { fetchPosts } from '../actions/postAction';\n\n\n\nfunction Posts(props) {\n  const { fetchPosts, posts } = props;\n  useEffect(() => {\n    fetchPosts();\n  } , [fetchPosts]);\n\n  const postItems = posts.map((post) => {\n        return (\n          <div key={post.id}>\n            <h5>{post.title}</h5>\n            <p>{post.body}</p>\n          </div>\n        ); \n      });\n  return (\n    <div>\n      <h1>POST</h1>\n      {postItems}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.posts.items,\n  }\n}\n\nexport default connect(mapStateToProps, { fetchPosts })(Posts);\n","\nimport { FETCH_POST, NEW_POST } from './types';\nimport axios from \"axios\";\n\n\nexport const fetchPosts = () => async dispatch => {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts?_limit=5\");\n    dispatch({ type: FETCH_POST, payload: res.data});\n}\n\nexport const createPost = (post) => async dispatch => {\n    console.log(\"action called\");\n    const res = await axios.post('https://jsonplaceholder.typicode.com/posts', post);\n    dispatch({type: NEW_POST, payload: res.data});\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createPost } from \"../actions/postAction\";\n\nfunction PostForm(props) {\n\n    const { createPost } = props;\n\n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('');\n\n    function handleSubmit(e){\n        e.preventDefault();\n       createPost({title, body});\n       setTitle('');\n       setBody('');\n    }\n\n    return ( \n        <div>\n            <h1>Add Post</h1>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input\n                        id=\"title\" \n                        type=\"text\" \n                        name=\"title\" \n                        className=\"form-control\" \n                        value={title} \n                        onChange={e => setTitle(e.target.value)}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"body\">Body</label>\n                    <textarea \n                        name=\"body\" \n                        id=\"body\" \n                        cols=\"100\" \n                        rows=\"10\" \n                        className=\"form-control\" \n                        value={body}\n                        onChange={e => setBody(e.target.value)}\n                    />\n                </div>\n\n                <input \n                    type=\"submit\" \n                    value=\"submit\" \n                    className=\"btn btn-danger btn-block\"\n                />\n            </form>\n        </div>\n    )\n}\n\nPostForm.propTypes = {\n    createPost: PropTypes.func.isRequired,\n}\n\nexport default connect(null, { createPost })(PostForm);\n","\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nimport './App.css';\n\nimport Posts from './components/Posts';\nimport PostForm from './components/PostForm';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"container\">\n        <PostForm/>\n        <hr/>\n        <Posts/>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}